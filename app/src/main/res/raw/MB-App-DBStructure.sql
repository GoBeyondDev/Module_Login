BEGIN TRANSACTION;
CREATE TABLE `TB_USERS` (
	`username`	TEXT NOT NULL,
	`password`	TEXT NOT NULL,
	`fullname`	TEXT NOT NULL,
	`age`	INTEGER,
	PRIMARY KEY(username)
);
CREATE TABLE `TB_STATEMENTS` (
	`id`	INTEGER NOT NULL,
	`case_id`	INTEGER NOT NULL,
	`notes`	BLOB NOT NULL,
	PRIMARY KEY(id,case_id),
	FOREIGN KEY(`case_id`) REFERENCES TB_CASES(id_number)
);
CREATE TABLE `TB_PERSON_TYPE` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT NOT NULL UNIQUE
);
CREATE TABLE `TB_PERSONS` (
	`first_name`	TEXT NOT NULL,
	`last_name`	TEXT NOT NULL,
	`gender`	INTEGER NOT NULL,
	`race`	TEXT NOT NULL,
	`id`	TEXT NOT NULL,
	`id_type`	INTEGER NOT NULL,
	`id_address`	TEXT NOT NULL,
	`person_type`	INTEGER,
	`notes`	BLOB,
	PRIMARY KEY(id),
	FOREIGN KEY(`id_type`) REFERENCES TB_ID_TYPE(id),
	FOREIGN KEY(`person_type`) REFERENCES TB_PERSON_TYPE(id)
);
CREATE TABLE `TB_MULTIMEDIA` (
	`fullpath`	TEXT NOT NULL,
	`type`	INTEGER NOT NULL,
	`owner_table`	TEXT NOT NULL,
	`owner_id`	TEXT NOT NULL,
	PRIMARY KEY(fullpath)
);
CREATE TABLE `TB_IO_LOGSHEET` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`case_id`	INTEGER NOT NULL,
	`datetime`	TEXT NOT NULL,
	`starttime`	TEXT NOT NULL,
	`notes`	BLOB,
	FOREIGN KEY(`case_id`) REFERENCES TB_CASES(id_number)
);
CREATE TABLE `TB_ID_TYPE` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name`	TEXT NOT NULL UNIQUE
);
CREATE TABLE `TB_EXHIBITS` (
	`id`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`case_id`	INTEGER NOT NULL,
	`name`	TEXT NOT NULL,
	`location`	TEXT,
	`notes`	BLOB,
	FOREIGN KEY(`case_id`) REFERENCES TB_CASES(id_number)
);
CREATE TABLE `TB_CASES_PERSONS` (
	`case_id`	INTEGER NOT NULL,
	`person_id`	TEXT NOT NULL,
	PRIMARY KEY(case_id,person_id),
	FOREIGN KEY(`case_id`) REFERENCES TB_CASES(id_number),
	FOREIGN KEY(`person_id`) REFERENCES TB_PERSONS(id)
);
CREATE TABLE "TB_CASES" (
	`id_number`	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	`name_title`	TEXT,
	`date`	TEXT NOT NULL,
	`time`	TEXT NOT NULL,
	`geolocation`	TEXT NOT NULL,
	`officer_assigned`	TEXT,
	FOREIGN KEY(`officer_assigned`) REFERENCES TB_USERS(username)
);
COMMIT;
